const mqtt = require('async-mqtt');
const rxjs = require('rxjs')
const { concatMap, delay } = require('rxjs/operators')
const dayjs = require('dayjs')
const { getPathLength } = require('geolib')

const routes = [
    [
        106.80199027061462,
        -6.217321634133903
    ],
    [
        106.80210828781128,
        -6.217257639738475
    ],
    [
        106.80221021175385,
        -6.217198978202489
    ],
    [
        106.80231750011444,
        -6.217161648130726
    ],
    [
        106.80247843265533,
        -6.217134983792125
    ],
    [
        106.80264472961426,
        -6.217129650924246
    ],
    [
        106.80277347564697,
        -6.217124318056305
    ],
    [
        106.8029773235321,
        -6.217156315263115
    ],
    [
        106.80310070514679,
        -6.2172149768038585
    ],
    [
        106.80320799350739,
        -6.217273638338063
    ],
    [
        106.80332064628601,
        -6.2173482984630395
    ],
    [
        106.80341720581055,
        -6.217454955766062
    ],
    [
        106.803497672081,
        -6.217556280183891
    ],
    [
        106.80358350276947,
        -6.217657604582191
    ],
    [
        106.80362910032272,
        -6.2177535960994215
    ],
    [
        106.80367201566696,
        -6.217820256864968
    ],
    [
        106.80370688438416,
        -6.217924247642343
    ],
    [
        106.80374175310135,
        -6.218038904116646
    ],
    [
        106.80376321077347,
        -6.2181268962776395
    ],
    [
        106.80378198623657,
        -6.218268216990243
    ],
    [
        106.80379271507263,
        -6.218356209112878
    ],
    [
        106.80379003286362,
        -6.218492196909793
    ],
    [
        106.80379003286362,
        -6.21866818106536
    ],
    [
        106.80376321077347,
        -6.218836165886191
    ],
    [
        106.80370420217514,
        -6.219036147745772
    ],
    [
        106.8036237359047,
        -6.2192307966827185
    ],
    [
        106.80351376533507,
        -6.219401447746242
    ],
    [
        106.8034118413925,
        -6.219540101694554
    ],
    [
        106.80332332849503,
        -6.219638759289367
    ],
    [
        106.80322140455246,
        -6.21972141834104
    ],
    [
        106.8030658364296,
        -6.219796078118471
    ],
    [
        106.80291563272476,
        -6.219868071465227
    ],
    [
        106.80268228054047,
        -6.21989740208517
    ],
    [
        106.8024730682373,
        -6.2198894028253555
    ],
    [
        106.80231750011444,
        -6.21985473936472
    ],
    [
        106.80211365222931,
        -6.219764081072291
    ],
    [
        106.80200368165968,
        -6.219686754869337
    ],
    [
        106.80188834667206,
        -6.2195800980190095
    ],
    [
        106.80175423622131,
        -6.219436111236736
    ],
    [
        106.80165767669678,
        -6.219278792299926
    ],
    [
        106.80159330368042,
        -6.219140138282698
    ],
    [
        106.80155575275421,
        -6.218985485681872
    ],
    [
        106.80151015520096,
        -6.218836165886191
    ],
    [
        106.80148065090178,
        -6.21870017817823
    ],
    [
        106.80145919322966,
        -6.218486864055681
    ],
    [
        106.80146992206573,
        -6.218302880555467
    ],
    [
        106.80150747299194,
        -6.218118896990892
    ],
    [
        106.80155038833618,
        -6.217945579081312
    ],
    [
        106.80162012577055,
        -6.217796258990349
    ],
    [
        106.8017166852951,
        -6.2175909437960355
    ],
    [
        106.80185079574585,
        -6.217441623604363
    ],
    [
        106.80194467306137,
        -6.217356297761517
    ]
];

const MQTT_HOST = 'tcp://127.0.0.1:1883';
const DEVID = '8376B95';
const TOPIC = `st/${DEVID}`;
const TOPIC_GPS = `gps/${DEVID}`;

const client = mqtt.connect(MQTT_HOST, {
    // will: {
    //     payload: Buffer.from([0]),
    //     retain: true,
    //     topic: TOPIC
    // }
});

const length = getPathLength(routes.map(([longitude, latitude]) => ({ longitude, latitude })))

console.log('total distance', length)

client.on('connect', function () {
    // client.publish(TOPIC, Buffer.from([1]), {
    //     retain: true
    // });

    rxjs.from(routes)
        .pipe(
            concatMap(val => rxjs.of(val).pipe(delay(3000)))
        )
        .subscribe(([longitude, latitude]) => {
            // const stamp = dayjs().unix();
            // console.log('publish', stamp, long, lat)

            // const buf = Buffer.allocUnsafe(20)

            // var len = buf.writeUInt32BE(stamp)
            // len = buf.writeDoubleBE(long, len)
            // len = buf.writeDoubleBE(lat, len)

            console.log('publish', [latitude, longitude]);
            client.publish(TOPIC_GPS, [latitude, longitude, 100].join(","))
        })
})